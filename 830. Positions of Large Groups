My answer: 15 ms
class Solution {
public:
    vector<vector<int>> largeGroupPositions(string S) {
        vector<vector<int>> results;
        stack<int> top, end;
        int i = 0;
        bool mark = false;
        if (S.length() <= 2) return results;
        while (i < S.length()-2){
            if (S[i] == S[i+1] && S[i+1] == S[i+2] ){
                if (!mark){
                    top.push(i);
                    end.push(i+2);
                    mark = true;
                }
                else{
                    end.pop();
                    end.push(i+2);    
                }
            }
            else{
                mark = false;
            }
            i++;
        }
        while(!top.empty() && !end.empty()){
            results.insert(results.begin(),vector<int>{top.top(),end.top()});    // insert value from the top of the vector
           // results.push_back(vector<int>{top.top(),end.top()});
            top.pop();
            end.pop();
        }
        return results;
    }
};

More Clean Code:13 ms

class Solution {
public:
  vector<vector<int>> largeGroupPositions(string S) {
	vector<vector<int>> res;
	int n = S.size(), i = 0, j = 0;
	while (j < n) {
	    while (j < n && S[j] == S[i]) ++j;
	    if (j - i >= 3) res.push_back({i, j - 1});
	    i = j;
	}
	return res;
    }
};
