23 ms
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        int result = 0;
	for (int i = 0; i < nums.size(); i++) {
		result = result + pow(-1 , i)*nums[i];
	}
	return result;
    }
};

idea: 15 ms
known that A XOR A = 0 and the XOR operator is commutative, the solution will be very straightforward.
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int re = 0;
        for (int i =  0;i < nums.size();i++){
            re ^= nums[i];  
        }
        return re;
    }
};
